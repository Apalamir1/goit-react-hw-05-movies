{"version":3,"file":"static/js/304.d4e23c83.chunk.js","mappings":"8SAEMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAMOC,EAAgB,mCAAG,oGACPC,EAAAA,EAAAA,IACrB,iEACAN,GAH4B,cACxBO,EADwB,yBAKvBA,EAASC,MALc,2CAAH,qDAShBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,mBAErBV,GAH6B,cACzBO,EADyB,yBAKxBA,EAASC,MALe,2CAAH,sDASjBG,EAAc,mCAAG,WAAMD,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,2BAErBV,GAH0B,cACtBO,EADsB,yBAKrBA,EAASC,MALY,2CAAH,sDASdI,EAAiB,mCAAG,WAAMF,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,kCAErBV,GAH6B,cACzBO,EADyB,yBAKxBA,EAASC,MALe,2CAAH,sDAOjBK,EAAmB,mCAAG,WAAMC,GAAN,uFACVR,EAAAA,EAAAA,IACrB,4CACA,CACES,OAAQ,CACNC,MAAOF,EACPG,QA3CI,sCAqCuB,cAC3BV,EAD2B,yBAU1BA,EAASC,MAViB,2CAAH,qD,mKCvCnBU,GALYC,EAAAA,EAAAA,IAAH,2EAKDA,EAAAA,EAAAA,GAAH,+JAQLC,EAAOD,EAAAA,EAAAA,GAAH,0JAUJE,EAAYF,EAAAA,EAAAA,GAAH,gUAqBTG,EAAQH,EAAAA,EAAAA,IAAH,yJAQLI,GAAYJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,8K,SCjDP,SAASM,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAgBA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE8BxB,EAAAA,EAAAA,MAF9B,OAEUyB,EAFV,OAGIF,EAAUE,EAAYC,SACtBC,QAAQC,IAAIH,EAAYC,SAJ5B,gDAMIC,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,KAGD,iCACE,SAAChB,EAAD,UAAO,mBACNS,IACC,SAACP,EAAD,UACGO,EAAOQ,KAAI,SAAAC,GAAK,OACf,SAACf,EAAD,WACE,UAACE,EAAD,CAAWc,GAAE,kBAAaD,EAAM1B,IAAhC,UACG0B,EAAME,aACL,SAAChB,EAAD,CACEiB,IAAG,0CAAqCH,EAAME,aAC9CE,IAAKJ,EAAMK,SAGb,SAACnB,EAAD,CACEiB,IAAI,mFACJC,IAAKJ,EAAMK,SAIf,yBACGL,EAAMK,MACNL,EAAMM,YAhBGN,EAAM1B,GADP,QA0B1B,C","sources":["components/optionsAPI.js","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NDM1MjBlMmZlMzk5MjljOTA4OGFmNzg1YzcxMWY1OSIsInN1YiI6IjY0OTkzMmNhYmJkMGIwMDBhZGYxMzUxNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.41RqzxpX4fIzZ0nIoO92sdGG4PVnsgxwTAeFRaUoj7U',\n  },\n};\nconst KEY = '543520e2fe39929c9088af785c711f59';\n\n// Запит головна \"Фільми дня\"\nexport const fetchTrandinFilm = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n    options\n  );\n  return response.data;\n};\n\n//запрос полной информации о фильме для страницы кинофильма.\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// запрос информации о актёрском составе для страницы кинофильма.\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// запрос обзоров для страницы кинофильма.\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n    options\n  );\n  return response.data;\n};\nexport const fetchMoviesbySearch = async input => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie',\n    {\n      params: {\n        query: input,\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  width: 90%;\n  margin: 0 auto;\n  heigth: 100%;\n`;\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  text-align: center;\n  font-size: 30px;\n  font-weight: 700;\n  margin-bottom: 15px;\n  color: #000;\n`;\nexport const List = styled.ul`\n  padding-left: 0px;\n\n  display: flex;\n  width: 100%;\n  heigth: 100%;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nexport const MovieItem = styled.li`\n  display: flex;\n\n  margin-top: 10px;\n  padding: 2px;\n  font-size: 23px;\n  font-weight: 400;\n  font-family: 'Segoe UI';\n  width: calc(50% - 10px);\n  margin-bottom: 5px;\n\n  :hover,\n  :focus {\n    color: #8f6f06;\n  }\n\n  ::before {\n    display: flex;\n    align-items: center;\n  }\n`;\nexport const Image = styled.img`\n  padding: 16px 32px;\n  width: 100px;\n  border-radius: 4px;\n  object-fit: cover;\n  margin: 0, auto;\n  margin-bottom: 20px;\n`;\nexport const MovieLink = styled(Link)`\n  width: 100%;\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  padding: 16px 32px;\n  text-decoration: none;\n  color: #000;\n`;\n","import { useState, useEffect } from 'react';\n\nimport { fetchTrandinFilm } from '../../components/optionsAPI';\n\nimport { Title, MovieItem, Image, MovieLink, List } from './Home.styled';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n\n  //----для трендовых фильмов----\n  useEffect(() => {\n    async function fetchTrending() {\n      try {\n        const trandinFilm = await fetchTrandinFilm();\n        setMovies(trandinFilm.results);\n        console.log(trandinFilm.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchTrending();\n  }, []);\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      {movies && (\n        <List>\n          {movies.map(movie => (\n            <MovieItem key={movie.id}>\n              <MovieLink to={`/movies/${movie.id}`}>\n                {movie.poster_path ? (\n                  <Image\n                    src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                    alt={movie.title}\n                  />\n                ) : (\n                  <Image\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/4/43/Illustration_of_an_image.png\"\n                    alt={movie.title}\n                  />\n                )}\n\n                <p>\n                  {movie.title}\n                  {movie.name}\n                </p>\n              </MovieLink>\n            </MovieItem>\n          ))}\n        </List>\n      )}\n    </>\n  );\n}\n"],"names":["options","method","headers","accept","Authorization","fetchTrandinFilm","axios","response","data","fetchMovieDetails","id","fetchMovieCast","fetchMovieReviews","fetchMoviesbySearch","input","params","query","api_key","Title","styled","List","MovieItem","Image","MovieLink","Link","Home","useState","movies","setMovies","useEffect","trandinFilm","results","console","log","fetchTrending","map","movie","to","poster_path","src","alt","title","name"],"sourceRoot":""}
{"version":3,"file":"static/js/631.41cdf0ed.chunk.js","mappings":"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","sources":["components/optionsAPI.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NDM1MjBlMmZlMzk5MjljOTA4OGFmNzg1YzcxMWY1OSIsInN1YiI6IjY0OTkzMmNhYmJkMGIwMDBhZGYxMzUxNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.41RqzxpX4fIzZ0nIoO92sdGG4PVnsgxwTAeFRaUoj7U',\n  },\n};\nconst KEY = '543520e2fe39929c9088af785c711f59';\n\n// Запит головна \"Фільми дня\"\nexport const fetchTrandinFilm = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n    options\n  );\n  return response.data;\n};\n\n//запрос полной информации о фильме для страницы кинофильма.\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// запрос информации о актёрском составе для страницы кинофильма.\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// запрос обзоров для страницы кинофильма.\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n    options\n  );\n  return response.data;\n};\nexport const fetchMoviesbySearch = async input => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie',\n    {\n      params: {\n        query: input,\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n","import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  width: 90%;\n\n  margin: 0 auto;\n  heigth: 100%;\n  display: flex;\n  border-bottom: 1px solid rgb(105, 105, 105);\n`;\n\nexport const BackLink = styled(Link)`\n  background-color: #000;\n  text-decoration: none;\n  color: rgb(255, 238, 1);\n  font-size: 20px;\n  display: inline-flex;\n  padding: 5px 5px;\n  font-size: 20px;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin-bottom: 10px;\n  border-radius: 4px;\n  border: 1px solid rgb(105, 105, 105);\n\n  :hover {\n    color: #fff;\n  }\n`;\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  text-align: center;\n  font-size: 30px;\n  font-weight: 700;\n  margin-bottom: 15px;\n`;\n\nexport const Image = styled.img`\n  width: 400px;\n  border-radius: 4px;\n  object-fit: cover;\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfoContainer = styled.div`\n  margin-left: 15px;\n`;\n\nexport const Сriteria = styled.p`\n  font-family: 'Andale Mono', monospace;\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 10px;\n`;\n\nexport const Details = styled.p`\n  font-family: 'Andale Mono', monospace;\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 15px;\n  color: dimgrey;\n  line-height: 30px;\n`;\n\nexport const Average = styled.span`\n  display: inline-block;\n  color: rgb(255, 238, 1);\n  background-color: #000;\n  border-radius: 5px;\n  padding: 1px 10px;\n  font-weight: 500;\n  font-size: 18px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  margin-right: 15px;\n\n  background-color: #000;\n  text-decoration: none;\n  color: rgb(255, 238, 1);\n  border-radius: 5px;\n  padding: 2px 10px;\n  font-weight: 500;\n  font-size: 22px;\n  text-align: center;\n\n  :hover,\n  :focus,\n  :active {\n    color: #fff;\n  }\n`;\n\nexport const LinkContainer = styled.div`\n  margin-top: 20px;\n  margin-bottom: 25px;\n  text-align: center;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { fetchMovieDetails } from 'components/optionsAPI';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\nimport {\n  BackLink,\n  Container,\n  Title,\n  Image,\n  MovieInfoContainer,\n  Сriteria,\n  Details,\n  Average,\n  LinkContainer,\n  StyledLink,\n} from './MovieDetails.styled';\n\nexport default function MoviesDetals() {\n  const [movie, setMovie] = useState([]);\n\n  const { moviesId } = useParams();\n\n  const location = useLocation();\n\n  const backPageLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function fetchDetails() {\n      try {\n        const movieDetails = await fetchMovieDetails(moviesId);\n        setMovie(movieDetails);\n        console.log(movieDetails);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchDetails();\n  }, [moviesId]);\n  const {\n    poster_path,\n    title,\n    overview,\n    genres,\n    release_date,\n    vote_average,\n    // backdrop_path,\n  } = movie;\n  return (\n    <>\n      <BackLink to={backPageLink}>⇦ Back</BackLink>\n\n      <Container>\n        {/* <img\n        src={`https://image.tmdb.org/t/p/w500/${backdrop_path}`}\n        alt={title}\n      ></img> */}\n\n        {poster_path ? (\n          <Image\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt={title}\n          />\n        ) : (\n          <Image\n            src=\"https://upload.wikimedia.org/wikipedia/commons/4/43/Illustration_of_an_image.png\"\n            alt={title}\n          />\n        )}\n        <MovieInfoContainer>\n          <Title>\n            {title} ({release_date && new Date(release_date).getFullYear()})\n          </Title>\n          <Details>\n            User score: <Average> {Math.round(vote_average * 10)}%</Average>\n          </Details>\n          <Сriteria>Overview</Сriteria>\n          <Details>{overview}</Details>\n          <Сriteria>Geners</Сriteria>\n          {genres && (\n            <Details>{genres.map(genre => genre.name).join(' ')}</Details>\n          )}\n        </MovieInfoContainer>\n      </Container>\n      <LinkContainer>\n        <StyledLink to=\"cast\" state={{ from: backPageLink }}>\n          Cast\n        </StyledLink>\n        <StyledLink to=\"reviews\" state={{ from: backPageLink }}>\n          Reviews\n        </StyledLink>\n      </LinkContainer>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["options","method","headers","accept","Authorization","fetchTrandinFilm","axios","response","data","fetchMovieDetails","id","fetchMovieCast","fetchMovieReviews","fetchMoviesbySearch","input","params","query","api_key","Container","styled","BackLink","Link","Title","Image","MovieInfoContainer","Сriteria","Details","Average","StyledLink","NavLink","LinkContainer","MoviesDetals","useState","movie","setMovie","moviesId","useParams","backPageLink","useLocation","state","from","useEffect","movieDetails","console","log","fetchDetails","poster_path","title","overview","genres","release_date","vote_average","to","src","alt","Date","getFullYear","Math","round","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}
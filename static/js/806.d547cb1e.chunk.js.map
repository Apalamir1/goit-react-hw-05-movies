{"version":3,"file":"static/js/806.d547cb1e.chunk.js","mappings":"gRAEaA,EAAYC,EAAAA,EAAAA,IAAH,6IAOTC,EAAeD,EAAAA,EAAAA,EAAH,0GAQZE,EAAgBF,EAAAA,EAAAA,EAAH,iLAUbG,EAAeH,EAAAA,EAAAA,EAAH,wJ,SClBV,SAASI,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAcR,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE8BC,EAAAA,EAAAA,IAAkBH,GAFhD,OAEUI,EAFV,OAGIC,QAAQC,IAAIF,EAAYG,SACxBR,EAAWK,EAAYG,SAJ3B,gDAMIF,QAAQG,QANZ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACT,KAEF,SAACT,EAAD,UACGmB,MAAMC,QAAQb,IAA+B,IAAnBA,EAAQc,QACjC,wBACGd,EAAQe,KAAI,SAAAC,GAAM,OACjB,2BACE,UAACrB,EAAD,WAAc,YAAUqB,EAAOC,WAC/B,SAACrB,EAAD,UAAgBoB,EAAOE,YAFhBF,EAAOG,GADC,OAQrB,SAACtB,EAAD,UAAc,0CAIrB,C,8LCvCKuB,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAMOC,EAAgB,mCAAG,oGACPC,EAAAA,EAAAA,IACrB,iEACAN,GAH4B,cACxBO,EADwB,yBAKvBA,EAASC,MALc,2CAAH,qDAShBC,EAAiB,mCAAG,WAAMV,GAAN,uFACRO,EAAAA,EAAAA,IAAA,6CACiBP,EADjB,mBAErBC,GAH6B,cACzBO,EADyB,yBAKxBA,EAASC,MALe,2CAAH,sDASjBE,EAAc,mCAAG,WAAMX,GAAN,uFACLO,EAAAA,EAAAA,IAAA,6CACiBP,EADjB,2BAErBC,GAH0B,cACtBO,EADsB,yBAKrBA,EAASC,MALY,2CAAH,sDASdvB,EAAiB,mCAAG,WAAMc,GAAN,uFACRO,EAAAA,EAAAA,IAAA,6CACiBP,EADjB,kCAErBC,GAH6B,cACzBO,EADyB,yBAKxBA,EAASC,MALe,2CAAH,sDAOjBG,EAAmB,mCAAG,WAAMC,GAAN,uFACVN,EAAAA,EAAAA,IACrB,4CACA,CACEO,OAAQ,CACNC,MAAOF,EACPG,QA3CI,sCAqCuB,cAC3BR,EAD2B,yBAU1BA,EAASC,MAViB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","components/optionsAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 90%;\n  margin: 0 auto;\n  heigth: 100%;\n  display: flex;\n  border-bottom: 1px solid rgb(105, 105, 105);\n`;\nexport const ReviewAuthor = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  color: #000;\n\n  margin-bottom: 5px;\n`;\n\nexport const ReviewContent = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n  margin-bottom: 15px;\n  color: dimgrey;\n  line-height: 25px;\n  font-style: italic;\n  letter-spacing: 0em;\n`;\n\nexport const Notification = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 5px;\n  color: dimgrey;\n  line-height: 30px;\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../optionsAPI';\nimport {\n  ReviewAuthor,\n  ReviewContent,\n  Notification,\n  Container,\n} from './Reviews.styled';\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    async function getReviewInfo() {\n      try {\n        const movieReview = await fetchMovieReviews(moviesId);\n        console.log(movieReview.results);\n        setReviews(movieReview.results);\n      } catch (error) {\n        console.error();\n      }\n    }\n    getReviewInfo();\n  }, [moviesId]);\n  return (\n    <Container>\n      {Array.isArray(reviews) && reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <ReviewAuthor> Author: {review.author}</ReviewAuthor>\n              <ReviewContent>{review.content}</ReviewContent>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <Notification>Users have not left any feedback yet</Notification>\n      )}\n    </Container>\n  );\n}\n","import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NDM1MjBlMmZlMzk5MjljOTA4OGFmNzg1YzcxMWY1OSIsInN1YiI6IjY0OTkzMmNhYmJkMGIwMDBhZGYxMzUxNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.41RqzxpX4fIzZ0nIoO92sdGG4PVnsgxwTAeFRaUoj7U',\n  },\n};\nconst KEY = '543520e2fe39929c9088af785c711f59';\n\n// Запит головна \"Фільми дня\"\nexport const fetchTrandinFilm = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n    options\n  );\n  return response.data;\n};\n\n//запрос полной информации о фильме для страницы кинофильма.\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// запрос информации о актёрском составе для страницы кинофильма.\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// запрос обзоров для страницы кинофильма.\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n    options\n  );\n  return response.data;\n};\nexport const fetchMoviesbySearch = async input => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie',\n    {\n      params: {\n        query: input,\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n"],"names":["Container","styled","ReviewAuthor","ReviewContent","Notification","Reviews","useState","reviews","setReviews","moviesId","useParams","useEffect","fetchMovieReviews","movieReview","console","log","results","error","getReviewInfo","Array","isArray","length","map","review","author","content","id","options","method","headers","accept","Authorization","fetchTrandinFilm","axios","response","data","fetchMovieDetails","fetchMovieCast","fetchMoviesbySearch","input","params","query","api_key"],"sourceRoot":""}